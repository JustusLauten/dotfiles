# use utf-8
set -g utf8
setw -g utf8 on

# general settings
set -g default-terminal screen-256color
set -g history-limit 100000
set -s escape-time 0

# window numbering
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on
set -g automatic-rename on

# mouse
set -g mouse on
set -g mode-mouse on
setw -g mouse-select-window on
setw -g mouse-select-pane on
setw -g mouse-resize-pane on

# scrolling with terminal scroll bar
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# pbcopy support
set-option -g default-command "reattach-to-user-namespace -l bash"

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind C-l send-keys 'C-l'

# Pane resizing
bind -r Left  resize-pane -L 2
bind -r Down  resize-pane -D 2
bind -r Up    resize-pane -U 2
bind -r Right resize-pane -R 2

# New window with default path set to last path
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# reload tmux.conf
unbind R
bind R source-file ~/.tmux.conf \; display "Reloaded!"

# create new session if none exists
if-shell "[[ -z $(tmux list-sessions) ]]" new-session

# local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

set -g default-command /usr/local/bin/fish
set -g default-shell /usr/local/bin/fish
